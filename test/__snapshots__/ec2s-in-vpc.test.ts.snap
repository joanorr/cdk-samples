// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The EC2s-in-VPC stack passes snapshot tests 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61x8664C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
    },
  },
  "Resources": {
    "ALBAEE750D2": {
      "DependsOn": [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
      ],
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ALBSecurityGroup8B8624F8",
              "GroupId",
            ],
          },
        ],
        "Subnets": [
          {
            "Ref": "VPCPublicSubnet1SubnetB4246D30",
          },
          {
            "Ref": "VPCPublicSubnet2Subnet74179F39",
          },
          {
            "Ref": "VPCPublicSubnet3Subnet631C5E25",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "ALBListener3B99FF85": {
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "ALBListenerHTTPtargetsGroup9332A803",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "ALBAEE750D2",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "ALBListenerHTTPtargetsGroup9332A803": {
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "instance",
        "Targets": [
          {
            "Id": {
              "Ref": "instance0B661231D",
            },
          },
          {
            "Id": {
              "Ref": "instance117C99FBC",
            },
          },
          {
            "Id": {
              "Ref": "instance2A4CB1B0E",
            },
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "ALBSecurityGroup8B8624F8": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB Ec2sInVpcStackALBCBDBB0C8",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "ALBSecurityGrouptoEc2sInVpcStackinstance0InstanceSecurityGroupDAF64985801F4EAD7A": {
      "Properties": {
        "Description": "to Ec2sInVpcStackinstance0InstanceSecurityGroupDAF64985:80",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "instance0InstanceSecurityGroup56F2543E",
            "GroupId",
          ],
        },
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "ALBSecurityGroup8B8624F8",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ALBSecurityGrouptoEc2sInVpcStackinstance1InstanceSecurityGroupB96273238066E36128": {
      "Properties": {
        "Description": "to Ec2sInVpcStackinstance1InstanceSecurityGroupB9627323:80",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "instance1InstanceSecurityGroupB8E98523",
            "GroupId",
          ],
        },
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "ALBSecurityGroup8B8624F8",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ALBSecurityGrouptoEc2sInVpcStackinstance2InstanceSecurityGroup9514FC4A80C1038788": {
      "Properties": {
        "Description": "to Ec2sInVpcStackinstance2InstanceSecurityGroup9514FC4A:80",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "instance2InstanceSecurityGroup3F27664D",
            "GroupId",
          ],
        },
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "ALBSecurityGroup8B8624F8",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ARecordE7B57761": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::Join": [
              "",
              [
                "dualstack.",
                {
                  "Fn::GetAtt": [
                    "ALBAEE750D2",
                    "DNSName",
                  ],
                },
              ],
            ],
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "ALBAEE750D2",
              "CanonicalHostedZoneID",
            ],
          },
        },
        "HostedZoneId": "DUMMY",
        "Name": "ec2s-in-vpc.webskate101.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "VPCB9E5F0B4": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.96.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCPublicSubnet2NATGateway3C070193",
        },
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.128.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet3DefaultRoute27F311AE": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCPublicSubnet3NATGatewayD3048F5C",
        },
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet3RouteTable192186F8": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet3RouteTableAssociationC28D144E": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8",
        },
        "SubnetId": {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet3Subnet3EDCD457": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.160.0/19",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/VPC/PrivateSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": {
      "DependsOn": [
        "VPCVPCGW99B986DC",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": {
      "DependsOn": [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": {
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/VPC/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": {
      "DependsOn": [
        "VPCVPCGW99B986DC",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2EIP4947BC00": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet2NATGateway3C070193": {
      "DependsOn": [
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/VPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": {
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "CidrBlock": "10.0.32.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/VPC/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet3DefaultRouteA0D29D46": {
      "DependsOn": [
        "VPCVPCGW99B986DC",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet3EIPAD4BC883": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet3NATGatewayD3048F5C": {
      "DependsOn": [
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VPCPublicSubnet3EIPAD4BC883",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/VPC/PublicSubnet3",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet3RouteTable98AE0E14": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet3RouteTableAssociation427FE0C6": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14",
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet3Subnet631C5E25",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet3Subnet631C5E25": {
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "CidrBlock": "10.0.64.0/19",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/VPC/PublicSubnet3",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "instance0B661231D": {
      "DependsOn": [
        "instance0InstanceRole353A2E22",
      ],
      "Properties": {
        "AvailabilityZone": "dummy1a",
        "IamInstanceProfile": {
          "Ref": "instance0InstanceProfile493621FA",
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61x8664C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t2.micro",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "instance0InstanceSecurityGroup56F2543E",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/instance-0",
          },
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash
#!/bin/bash
yum update -y
yum install -y httpd
systemctl start httpd
systemctl enable httpd
echo "<h1>Hello from $(hostname -f)</h1>" > /var/www/html/index.html",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "instance0InstanceProfile493621FA": {
      "Properties": {
        "Roles": [
          {
            "Ref": "instance0InstanceRole353A2E22",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "instance0InstanceRole353A2E22": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/instance-0",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "instance0InstanceSecurityGroup56F2543E": {
      "Properties": {
        "GroupDescription": "Ec2sInVpcStack/instance-0/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/instance-0",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "instance0InstanceSecurityGroupfromEc2sInVpcStackALBSecurityGroup829439B88018808258": {
      "Properties": {
        "Description": "from Ec2sInVpcStackALBSecurityGroup829439B8:80",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "instance0InstanceSecurityGroup56F2543E",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ALBSecurityGroup8B8624F8",
            "GroupId",
          ],
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "instance117C99FBC": {
      "DependsOn": [
        "instance1InstanceRole94A7532A",
      ],
      "Properties": {
        "AvailabilityZone": "dummy1b",
        "IamInstanceProfile": {
          "Ref": "instance1InstanceProfileD4257E82",
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61x8664C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t2.micro",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "instance1InstanceSecurityGroupB8E98523",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/instance-1",
          },
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash
#!/bin/bash
yum update -y
yum install -y httpd
systemctl start httpd
systemctl enable httpd
echo "<h1>Hello from $(hostname -f)</h1>" > /var/www/html/index.html",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "instance1InstanceProfileD4257E82": {
      "Properties": {
        "Roles": [
          {
            "Ref": "instance1InstanceRole94A7532A",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "instance1InstanceRole94A7532A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/instance-1",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "instance1InstanceSecurityGroupB8E98523": {
      "Properties": {
        "GroupDescription": "Ec2sInVpcStack/instance-1/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/instance-1",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "instance1InstanceSecurityGroupfromEc2sInVpcStackALBSecurityGroup829439B880CD84C9C9": {
      "Properties": {
        "Description": "from Ec2sInVpcStackALBSecurityGroup829439B8:80",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "instance1InstanceSecurityGroupB8E98523",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ALBSecurityGroup8B8624F8",
            "GroupId",
          ],
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "instance2A4CB1B0E": {
      "DependsOn": [
        "instance2InstanceRoleDA7AEF13",
      ],
      "Properties": {
        "AvailabilityZone": "dummy1c",
        "IamInstanceProfile": {
          "Ref": "instance2InstanceProfileB3658486",
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61x8664C96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "InstanceType": "t2.micro",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "instance2InstanceSecurityGroup3F27664D",
              "GroupId",
            ],
          },
        ],
        "SubnetId": {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/instance-2",
          },
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash
#!/bin/bash
yum update -y
yum install -y httpd
systemctl start httpd
systemctl enable httpd
echo "<h1>Hello from $(hostname -f)</h1>" > /var/www/html/index.html",
        },
      },
      "Type": "AWS::EC2::Instance",
    },
    "instance2InstanceProfileB3658486": {
      "Properties": {
        "Roles": [
          {
            "Ref": "instance2InstanceRoleDA7AEF13",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "instance2InstanceRoleDA7AEF13": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/instance-2",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "instance2InstanceSecurityGroup3F27664D": {
      "Properties": {
        "GroupDescription": "Ec2sInVpcStack/instance-2/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Ec2sInVpcStack/instance-2",
          },
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "instance2InstanceSecurityGroupfromEc2sInVpcStackALBSecurityGroup829439B880F3F5F457": {
      "Properties": {
        "Description": "from Ec2sInVpcStackALBSecurityGroup829439B8:80",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "instance2InstanceSecurityGroup3F27664D",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ALBSecurityGroup8B8624F8",
            "GroupId",
          ],
        },
        "ToPort": 80,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
